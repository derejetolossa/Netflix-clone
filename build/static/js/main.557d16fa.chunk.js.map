{"version":3,"sources":["axios.js","requests.js","Banner.js","Nav.js","Row.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRatedMovies","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","useState","movie","setMovie","useEffect","a","get","request","data","results","Math","floor","random","length","fetchData","className","style","backgroundSize","backgroundImage","backdrop_path","backgroundPosition","title","name","original_name","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","src","alt","Row","fetchUrl","isLargeRow","movies","setMovies","trailerUrl","setTrailerUrl","map","onClick","movieTrailer","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleClick","poster_path","padding","videoId","opts","height","width","playerVars","autoplay","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.557d16fa.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\nbaseURL: \"https://api.themoviedb.org/3\",\r\n});\r\n// instance.get(\"/movie/top_rated\");\r\n\r\nexport default instance;\r\n// https://www.youtube.com/watch?v=zWInNnE8Acw \r\n// paused at 25:08/2:17:24","const API_KEY = \"37d7a6091ca94d2ad2887bbd2949c96b\";\r\n\r\nconst requests = {\r\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n  fetchTopRatedMovies: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n};\r\nexport default requests;","import React, {useEffect, useState} from \"react\";\r\nimport \"./Banner.css\";\r\nimport axios from \"./axios\";\r\nimport requests from \"./requests\";\r\nfunction Banner() {\r\n    const [movie, setMovie] = useState([]);\r\n\r\n    useEffect(() => {\r\n    async function fetchData() {\r\n    const request = await axios.get(requests.fetchNetflixOriginals);\r\n    setMovie(\r\n        request?.data.results[\r\n          Math.floor(Math.random() * request.data.results.length)\r\n        ]\r\n    );\r\n    return request;\r\n    }\r\n    fetchData();\r\n}, []);\r\n// console.log(movie);\r\nfunction truncate(str, n) {\r\n    return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\r\n}\r\n\r\n    return (\r\n\r\n<header\r\n    className=\"banner\"\r\n    style={{\r\n        backgroundSize: \"cover\",\r\n        backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\r\n        backgroundPosition: \"center center\",\r\n    }}\r\n    >\r\n    <div className=\"banner__contents\">\r\n        <h1 className=\"banner__title\">\r\n        {movie?.title || movie?.name || movie.original_name}\r\n        </h1>\r\n        <div className=\"banner__buttons\">\r\n        <button className=\"banner__button\">Play</button>\r\n        <button className=\"banner__button\">My List</button>\r\n        </div>\r\n        <h1 className=\"banner__description\">\r\n        {truncate(movie?.overview, 150)}\r\n        </h1>\r\n    </div>\r\n    <div className=\"banner__fadeBottom\" />\r\n    </header>\r\n);\r\n}\r\n\r\nexport default Banner;","import React, { useState, useEffect } from \"react\";\r\nimport \"./Nav.css\";\r\nfunction Nav() {\r\n    const [show, handleShow] = useState(false);\r\nuseEffect(() => {\r\n    window.addEventListener(\"scroll\", () => {\r\n    if (window.scrollY > 100) {\r\n        handleShow(true);\r\n    } else handleShow(false);\r\n    });\r\n    return () => {\r\n    window.removeEventListener(\"scroll\");\r\n    };\r\n}, []);\r\n\r\n    return (\r\n        <div className={`nav ${show && \"nav__black\"}`}>\r\n\r\n    <img\r\n        className=\"nav__logo\"\r\n        src=\"https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/f/12c6f684-d447-4457-84fa-12033cfd581e/d9z3o32-2c299a83-49a9-44c2-bc23-b0b5070a546b.png/v1/fill/w_1024,h_512,strp/netflix_logo_background__2_by_sixmonthslate_d9z3o32-fullview.png?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1cm46YXBwOiIsImlzcyI6InVybjphcHA6Iiwib2JqIjpbW3siaGVpZ2h0IjoiPD01MTIiLCJwYXRoIjoiXC9mXC8xMmM2ZjY4NC1kNDQ3LTQ0NTctODRmYS0xMjAzM2NmZDU4MWVcL2Q5ejNvMzItMmMyOTlhODMtNDlhOS00NGMyLWJjMjMtYjBiNTA3MGE1NDZiLnBuZyIsIndpZHRoIjoiPD0xMDI0In1dXSwiYXVkIjpbInVybjpzZXJ2aWNlOmltYWdlLm9wZXJhdGlvbnMiXX0.WKy-rj_8y7ziLuhhtAES7jddy-eUpz6PQQ331bp7rRI\"\r\n        alt=\"Netflix Logo\"\r\n    />\r\n    <img\r\n        className=\"nav__avatar\"\r\n        src=\"https://i.pinimg.com/originals/0d/dc/ca/0ddccae723d85a703b798a5e682c23c1.png\"\r\n        alt=\"Avatar logo\"\r\n    />\r\n    </div>\r\n\r\n    )\r\n}\r\nexport default Nav;","import React,{useState, useEffect} from \"react\";\r\nimport\"./Row.css\";\r\nimport axios from \"./axios\";\r\nimport YouTube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\";\r\n\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\nfunction Row({title, fetchUrl, isLargeRow }) {\r\nconst [movies, setMovies] = useState([]);\r\nconst [trailerUrl, setTrailerUrl] = useState(\"\");\r\n\r\nuseEffect(() => {\r\n    async function fetchData() {\r\n        const request = await axios.get(fetchUrl);\r\n        //console.log(request, data results);\r\n        setMovies(request.data.results);\r\n        return request;\r\n    }\r\n    fetchData();\r\n}, [fetchUrl]);\r\nconst opts = {\r\n    height: \"390\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n    autoplay: 1,\r\n    }\r\n}\r\nconst handleClick = (movie) => {\r\n    if(trailerUrl){\r\n    setTrailerUrl(\"\")\r\n    }else {\r\n    movieTrailer(movie?.title || \"\")\r\n    .then((url) => {\r\n        const urlParams = new URLSearchParams(new URL(url).search)\r\n        setTrailerUrl(urlParams.get('v'))\r\n    })\r\n    .catch((error) => console.log(error))\r\n    }\r\n};\r\n\r\n\r\n\r\n// console.log(movies);\r\nreturn (\r\n    <div className=\"row\">\r\n<h1>{title}</h1>\r\n<div className=\"row__posters\">\r\n{movies.map((movie) => (\r\n    <img\r\n    // key={movie.id}\r\n    onClick={() => handleClick(movie)}\r\n    className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\r\n    src={`${base_url}${\r\n        isLargeRow ? movie.poster_path : movie.backdrop_path\r\n        }`}\r\n    alt={movie.name}\r\n    />\r\n))}\r\n</div>\r\n<div style={{ padding: \"40px\"}}>\r\n    {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n</div>\r\n</div>\r\n);\r\n}\r\nexport default Row;\r\n","// import logo from './logo.svg';\nimport \"./App.css\";\nimport Banner from \"./Banner\";\nimport Nav from \"./Nav\";\nimport requests from \"./requests\";\nimport Row from './Row';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Nav />\n      <Banner />\n    <Row title=\"NETFLIX ORIGINALS\"\n      fetchUrl={requests.fetchNetflixOriginals}\n      isLargeRow\n    />\n\n    <Row title=\"Trending Now\" \n      fetchUrl={requests.fetchTrending}\n    />\n\n<Row title=\"Top Rated\"\n      fetchUrl={requests.fetchTopRatedMovies} />\n\n<Row title=\"Action Movies\"\n      fetchUrl={requests.fetchActionMovies} />\n\n<Row title=\"Comedy Movies\"\n      fetchUrl={requests.fetchComedyMovies} />\n\n<Row title=\"Horror Movies\"\n      fetchUrl={requests.fetchHorrorMovies} />\n\n<Row title=\"Romance Movies\"\n      fetchUrl={requests.fetchRomanceMovies} />\n\n<Row title=\"Documentaries Movies\"\n      fetchUrl={requests.fetchDocumentaries} />\n    </div>\n  );\n}\n\n// API KEY: 37d7a6091ca94d2ad2887bbd2949c96b\n// https://api.themoviedb.org/3/movie/550?api_key=37d7a6091ca94d2ad2887bbd2949c96b\n// netflix-clone-4f625.web.app\n\n// Paused at 48:57/2:17:24 from  https://www.youtube.com/watch?v=zWInNnE8Acw\n\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}